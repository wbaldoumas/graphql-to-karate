# This is a federated subgraph schema for a blogging platform

# User type
type User @key(fields: "id") {
  id: ID! @external
  username: String! @inaccessible(reason: "Sensitive information")
  email: String! @inaccessible(reason: "Sensitive information")
  role: UserRole!
  posts: [Post!]! @requires(fields: "id")
}

# Post type
type Post @key(fields: "id") {
  id: ID!
  title: String!
  content: String!
  author: User! @provides(fields: "username email")
  comments: [Comment!]!
  published: Boolean! @inaccessible(reason: "Internal field")
}

# Comment type
type Comment @key(fields: "id") {
  id: ID!
  content: String!
  author: User! @provides(fields: "username")
  post: Post! @requires(fields: "id")
}

# UserRole enum
enum UserRole {
  ADMIN
  MEMBER
  GUEST
}

# Query type
type Query {
  post(id: ID!): Post
  user(id: ID!): User @external
}

# Mutation type
type Mutation {
  createPost(input: PostInput!): Post!
  createComment(input: CommentInput!): Comment!
}

# Input types
input PostInput {
  title: String!
  content: String!
  authorId: ID!
}

input CommentInput {
  content: String!
  authorId: ID!
  postId: ID!
}
